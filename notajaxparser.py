import requests

base_api_url = 'https://urfu.ru/api/ratings/departmental/35/'
base_page_get_url = 'https://urfu.ru/'
api_urls = {
    '–ò–Ω—Å—Ç–∏—Ç—É—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞—É–∫ –∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏': '4/1/',
    '–ò–Ω—Å—Ç–∏—Ç—É—Ç –Ω–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π': '17/1/',
    '–ò–Ω—Å—Ç–∏—Ç—É—Ç —Ä–∞–¥–∏–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π - –†—Ç–§': '7/1/',
    '–ò–Ω—Å—Ç–∏—Ç—É—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã': '12/1/',
    '–ò–Ω—Å—Ç–∏—Ç—É—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã, —Å–ø–æ—Ä—Ç–∞ –∏ –º–æ–ª–æ–¥–µ–∂–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏': '9/1/',
    '–ò–Ω—Å—Ç–∏—Ç—É—Ç —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è': '10/1/',
    '–ò–Ω—Å—Ç–∏—Ç—É—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è': '25/1/',
    '–£—Ä–∞–ª—å—Å–∫–∏–π –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç': '19/1/',
    '–£—Ä–∞–ª—å—Å–∫–∏–π —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç': '13/1/',
    '–§–∏–∑–∏–∫–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç': '14/1/',
    '–•–∏–º–∏–∫–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç–∏—Ç—É—Ç': '15/1/',
}
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.164 Safari/537.36 OPR/77.0.4054.277',
}


def get_abit_status(instit, fio):
    try:
        fio = str(fio)
        url = requests.get(base_api_url + api_urls[instit], headers=headers).json()['url']
        page_source = requests.get(base_page_get_url + url, headers=headers).content.decode()
        num_page = page_source.find(fio)
        if num_page == -1:
            ans = "–ù–µ –Ω–∞—à–ª–∏ –≤–∞—Å –≤ —Å–ø–∏—Å–∫–∞—Ö ‚òπÔ∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç –∏ —Ä–µ–≥. –Ω–æ–º–µ—Ä."
        else:
            if not page_source[num_page + len(fio) + 2].isdigit():
                ans = "–í—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –ø–æ –∫–æ–Ω–∫—É—Ä—Å—É –Ω–∞ –±—é–¥–∂–µ—Ç üò• (–∏–ª–∏ –µ—â—ë –Ω–µ –ø–æ–¥–∞–ª–∏ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏e)"
            else:
                num = page_source[num_page + len(fio) + 2]
                if page_source[num_page + len(fio) + 3].isdigit():
                    num += page_source[num_page + len(fio) + 3]
                if page_source[num_page + len(fio) + 4].isdigit():
                    num += page_source[num_page + len(fio) + 4]
                ans = "–í–∞—à–µ –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ üòâ: " + num
        print(ans)
        return ans
    except Exception as e:
        print('EROROR', e)
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ üò∞"
